#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: Thoughts About ALIGNN
#+date: \today
#+author: Panayotis Manganaris
#+email: panos.manganaris@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 29.0.50 (Org mode 9.5.4)
#+cite_export:
#+SETUPFILE: ~/org/mrg_beamer_header.org
#+INCLUDE: ~/org/mrg_beamer_frontmatter.org
* GNNs Overview
** Graph Networks are General                                      :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
- framework accepts complicated data structures
  - handles arbitrary dependencies between elements of input
  - handles
  - 
- 
* ALIGNN Performance on Perovskites Data
** pre-trained

** training
requires GPU resources -- can't do this on time
* Questions about ALIGNN
** Experiment v Prediction Parity                                  :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
*** Validating ALIGNN
- Input features easy to obtain for experimental measurements?
*** 
* GANs 
** Generative Adversarial Neural Networks                          :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
*** Reinforcement Learning Applications                           :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
- one neural network is the reward function of another
  - in pure GANs, both networks learn from each other
*** ig                                                    :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

** Applications to Materials Design                                :B_frame:
:PROPERTIES:
:BEAMER_env: frame
:END:
*** ALIGNN Design Generator                                       :B_block:
:PROPERTIES:
:BEAMER_env: block
:END:
create adversary to generate materials for ALIGNN predictions
- first, encoder/generator paradigm
- second, "BiGAN" encoder-generator may extend designer to consider
  fabrication constraints.
  - a type of auto-encoder
